-- Insertar roles básicos
INSERT INTO Roles (NombreRol, Descripcion) VALUES 
('Administrador', 'Acceso completo al sistema'),
('Coordinador', 'Puede crear y administrar juntas'),
('Participante', 'Usuario regular que participa en juntas'),
('Auditor', 'Solo puede ver información, no modificarla'),
('Cobrador', 'Puede registrar pagos y gestionar cobranzas');

-- Insertar permisos del sistema
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo) VALUES
-- Permisos de administración
('Gestionar Usuarios', 'Crear, editar y eliminar usuarios', 'users.manage'),
('Gestionar Roles', 'Crear, editar y eliminar roles', 'roles.manage'),
('Gestionar Permisos', 'Asignar permisos a roles', 'permissions.manage'),
('Gestionar Configuraciones', 'Modificar configuraciones del sistema', 'settings.manage'),

-- Permisos de juntas
('Crear Juntas', 'Crear nuevas juntas', 'juntas.create'),
('Editar Juntas', 'Modificar juntas existentes', 'juntas.edit'),
('Cerrar Juntas', 'Cerrar juntas completadas', 'juntas.close'),
('Ver Juntas', 'Ver listado de juntas', 'juntas.view'),
('Ver Detalle Junta', 'Ver detalles completos de una junta', 'juntas.detail'),

-- Permisos de participantes
('Agregar Participantes', 'Agregar usuarios a juntas', 'participants.add'),
('Remover Participantes', 'Remover usuarios de juntas', 'participants.remove'),
('Ver Participantes', 'Ver listado de participantes', 'participants.view'),

-- Permisos de pagos
('Registrar Pagos', 'Registrar pagos de participantes', 'payments.register'),
('Ver Pagos', 'Ver historial de pagos', 'payments.view'),
('Aprobar Pagos', 'Aprobar pagos registrados', 'payments.approve'),
('Generar Reportes Pagos', 'Generar reportes de pagos', 'payments.reports'),

-- Permisos de desembolsos
('Realizar Desembolsos', 'Realizar desembolsos a participantes', 'disbursements.create'),
('Ver Desembolsos', 'Ver historial de desembolsos', 'disbursements.view'),
('Aprobar Desembolsos', 'Aprobar desembolsos pendientes', 'disbursements.approve'),

-- Permisos de garantías
('Gestionar Garantías', 'Registrar y gestionar garantías', 'guarantees.manage'),
('Ver Garantías', 'Ver información de garantías', 'guarantees.view'),

-- Permisos de reportes
('Generar Reportes', 'Generar reportes del sistema', 'reports.generate'),
('Exportar Datos', 'Exportar datos a diferentes formatos', 'data.export'),

-- Permisos de auditoría
('Ver Auditoría', 'Ver registros de auditoría', 'audit.view'),
('Ver Historial Sesiones', 'Ver historial de sesiones de usuarios', 'sessions.view');

-- Asignar permisos al rol Administrador (todos los permisos)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador';

-- Asignar permisos al rol Coordinador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador'
AND p.Codigo IN (
    'juntas.create', 'juntas.edit', 'juntas.close', 'juntas.view', 'juntas.detail',
    'participants.add', 'participants.remove', 'participants.view',
    'payments.register', 'payments.view', 'payments.reports',
    'disbursements.create', 'disbursements.view',
    'guarantees.manage', 'guarantees.view',
    'reports.generate', 'data.export'
);

-- Asignar permisos al rol Cobrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador'
AND p.Codigo IN (
    'payments.register', 'payments.view',
    'disbursements.view',
    'guarantees.view',
    'juntas.view', 'juntas.detail',
    'participants.view'
);

-- Asignar permisos al rol Participante
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Participante'
AND p.Codigo IN (
    'juntas.view', 'juntas.detail',
    'payments.view',
    'disbursements.view',
    'guarantees.view'
);

-- Asignar permisos al rol Auditor
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor'
AND p.Codigo IN (
    'audit.view', 'sessions.view',
    'juntas.view', 'juntas.detail',
    'participants.view',
    'payments.view', 'payments.reports',
    'disbursements.view',
    'guarantees.view',
    'reports.generate'
);

-- Insertar configuraciones iniciales del sistema
INSERT INTO Configuraciones (Clave, Valor, Tipo, Descripcion)
VALUES
('COMISION_POR_DEFECTO', '2.5', 'decimal', 'Porcentaje de comisión por defecto para cada pago'),
('PENALIDAD_POR_DEFECTO', '5.0', 'decimal', 'Porcentaje de penalidad por defecto por pago atrasado'),
('DIAS_GRACIA_PENALIDAD', '3', 'entero', 'Días de gracia antes de aplicar penalidad'),
('MONEDA_PRINCIPAL', 'PEN', 'texto', 'Moneda principal del sistema'),
('REQUIERE_GARANTIA', '0', 'booleano', 'Indica si por defecto las juntas requieren garantía'),
('PUNTOS_CREDITO_INICIAL', '100', 'entero', 'Puntos de crédito iniciales para nuevos usuarios'),
('DIAS_NOTIFICACION_PAGO', '2', 'entero', 'Días antes para notificar pago pendiente'),
('MAX_PARTICIPANTES_JUNTA', '10', 'entero', 'Máximo número de participantes por junta');


-- Agregar el permiso de notificaciones a la tabla Permisos
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo) VALUES
('Ver Notificaciones', 'Ver y gestionar notificaciones del sistema', 'notifications.view');

-- Asignar permiso de notificaciones al Administrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador' AND p.Codigo = 'notifications.view';

-- Asignar permiso de notificaciones al Coordinador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador' AND p.Codigo = 'notifications.view';

-- Asignar permiso de notificaciones al Participante
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Participante' AND p.Codigo = 'notifications.view';

-- Asignar permiso de notificaciones al Cobrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador' AND p.Codigo = 'notifications.view';

-- Asignar permiso de notificaciones al Auditor
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor' AND p.Codigo = 'notifications.view';

--06-06-2025 CUENTAS BANCARIAS

-- Agregar nuevos permisos para cuentas bancarias
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo) VALUES
('Gestionar Cuentas Bancarias', 'Crear, editar y eliminar cuentas bancarias propias', 'accounts.manage'),
('Ver Cuentas Bancarias', 'Ver información de cuentas bancarias', 'accounts.view'),
('Gestionar Todas las Cuentas', 'Administrar cuentas bancarias de todos los usuarios', 'accounts.manage_all');

-- Asignar permisos al Administrador (todos los permisos de cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador' AND p.Codigo IN ('accounts.manage', 'accounts.view', 'accounts.manage_all');

-- Asignar permisos al Coordinador (puede ver todas las cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador' AND p.Codigo IN ('accounts.view', 'accounts.manage_all');

-- Asignar permisos al Participante (solo gestionar sus propias cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Participante' AND p.Codigo IN ('accounts.manage', 'accounts.view');

-- Asignar permisos al Cobrador (puede ver cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador' AND p.Codigo = 'accounts.view';

-- Asignar permisos al Auditor (puede ver cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor' AND p.Codigo = 'accounts.view';

-- PERMISOS ACTUALIZADOS
-- Actualizar descripción y código si el permiso existe pero con diferente código
UPDATE Permisos 
SET Descripcion = 'Permite ver el listado de juntas', 
    Codigo = 'juntas.view'
WHERE NombrePermiso = 'Ver Juntas' AND Codigo != 'juntas.view';

-- Luego insertar solo los que faltan
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
    SELECT 'Crear Juntas' AS NombrePermiso, 'Permite crear nuevas juntas' AS Descripcion, 'juntas.create' AS Codigo
    UNION SELECT 'Editar Juntas', 'Permite editar juntas existentes', 'juntas.edit'
    UNION SELECT 'Gestionar Todas las Juntas', 'Permite gestionar juntas de otros usuarios', 'juntas.manage_all'
    UNION SELECT 'Ver Mis Juntas', 'Permite ver las juntas propias', 'juntas.view_own'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos WHERE Codigo = nuevos_permisos.Codigo
);

--07 INSER DE NUEVOS PERMISOS DE JUNTAS

SELECT * FROM Permisos 
WHERE NombrePermiso IN (
  'Gestionar Todas las Juntas', 
  'Ver Mis Juntas', 
  'Administrar Participantes'
) OR Codigo IN (
  'juntas.manage_all', 
  'juntas.view_own', 
  'juntas.manage_participants'
);

-- Si el permiso existe pero con diferente código
UPDATE Permisos SET 
  Codigo = 'juntas.manage_all'
WHERE NombrePermiso = 'Gestionar Todas las Juntas' AND Codigo != 'juntas.manage_all';

-- Opción más segura: verificar existencia por código antes de insertar
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
  SELECT 'Ver Mis Juntas' AS NombrePermiso, 'Permite ver las juntas propias' AS Descripcion, 'juntas.view_own' AS Codigo
  UNION ALL
  SELECT 'Administrar Participantes', 'Gestionar participantes en juntas', 'juntas.manage_participants'
) AS nuevos_permisos
WHERE NOT EXISTS (
  SELECT 1 FROM Permisos WHERE Codigo = nuevos_permisos.Codigo
);
-- Asignación segura que evita completamente duplicados
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
CROSS JOIN Permisos p 
WHERE r.NombreRol = 'Coordinador'
AND p.Codigo IN ('juntas.manage_all', 'juntas.manage_participants')
AND NOT EXISTS (
  SELECT 1 FROM Roles_Permisos rp 
  WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- permisos paraa participantes
-- Agregar nuevos permisos específicos para participantes si no existen
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
    SELECT 'Gestionar Participantes' AS NombrePermiso, 'Agregar, editar y eliminar participantes en juntas' AS Descripcion, 'participants.manage' AS Codigo
    UNION SELECT 'Ver Participantes', 'Ver listado de participantes en juntas', 'participants.view'
    UNION SELECT 'Asignar Orden Participantes', 'Definir el orden de recepción en juntas', 'participants.assign_order'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos WHERE Codigo = nuevos_permisos.Codigo
);

-- Asignar permisos a roles existentes
-- Administrador (todos los permisos)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador' 
AND p.Codigo IN ('participants.manage', 'participants.view', 'participants.assign_order')
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Coordinador (puede gestionar participantes)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador' 
AND p.Codigo IN ('participants.manage', 'participants.view', 'participants.assign_order')
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Cobrador (puede ver participantes)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador' 
AND p.Codigo = 'participants.view'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Auditor (puede ver participantes)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor' 
AND p.Codigo = 'participants.view'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);



--CAMPOS NUEVOS 08-JUNIO 

-- CAMPO MaximoParticipantes en la tabla juntas
ALTER TABLE Juntas ADD COLUMN MaximoParticipantes INT NOT NULL DEFAULT 10;
ALTER TABLE Juntas ADD COLUMN FechaModificacion DATETIME NULL;


-- NUEVOS PERMISOS PARA EL ADMINISTRADOR
-- Primero, asegurarnos de que el rol Administrador existe
INSERT IGNORE INTO Roles (NombreRol, Descripcion) VALUES 
('Administrador', 'Acceso completo al sistema');

-- Insertar todos los permisos faltantes para las nuevas funcionalidades
-- Modificado para verificar por ambos campos (NombrePermiso y Codigo)
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT nuevos_permisos.NombrePermiso, nuevos_permisos.Descripcion, nuevos_permisos.Codigo
FROM (
    -- Permisos para la gestión de juntas
    SELECT 'Gestionar Todas las Juntas' AS NombrePermiso, 'Permite gestionar juntas de otros usuarios' AS Descripcion, 'juntas.manage_all' AS Codigo
    UNION SELECT 'Ver Mis Juntas', 'Permite ver las juntas propias', 'juntas.view_own'
    UNION SELECT 'Administrar Participantes', 'Gestionar participantes en juntas', 'juntas.manage_participants'
    
    -- Permisos para participantes
    UNION SELECT 'Gestionar Participantes', 'Agregar, editar y eliminar participantes en juntas', 'participants.manage'
    UNION SELECT 'Ver Participantes', 'Ver listado de participantes en juntas', 'participants.view'
    UNION SELECT 'Asignar Orden Participantes', 'Definir el orden de recepción en juntas', 'participants.assign_order'
    
    -- Permisos para cuentas bancarias
    UNION SELECT 'Gestionar Cuentas Bancarias', 'Crear, editar y eliminar cuentas bancarias propias', 'accounts.manage'
    UNION SELECT 'Ver Cuentas Bancarias', 'Ver información de cuentas bancarias', 'accounts.view'
    UNION SELECT 'Gestionar Todas las Cuentas', 'Administrar cuentas bancarias de todos los usuarios', 'accounts.manage_all'
    
    -- Permisos para notificaciones
    UNION SELECT 'Ver Notificaciones', 'Ver y gestionar notificaciones del sistema', 'notifications.view'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos 
    WHERE Codigo = nuevos_permisos.Codigo 
    OR NombrePermiso = nuevos_permisos.NombrePermiso
);

-- Asignar TODOS los permisos existentes al rol Administrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
CROSS JOIN Permisos p
WHERE r.NombreRol = 'Administrador'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Actualizar la descripción del rol Administrador para reflejar que tiene acceso completo
UPDATE Roles SET 
    Descripcion = 'Acceso completo a todas las funcionalidades del sistema, incluyendo configuración, usuarios, juntas, participantes, pagos y cuentas bancarias'
WHERE NombreRol = 'Administrador';

-- PERMISOS PARA MODULO DE PARTICIPANTES  08- JUNIO 
-- 1. Primero, insertamos los nuevos permisos específicos para participantes en juntas:
-- Insertar nuevos permisos para el módulo de participantes en juntas
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
    -- Permiso para gestionar completamente los participantes
    SELECT 'Gestionar Participantes Juntas' AS NombrePermiso, 
           'Administrar completamente los participantes en juntas (agregar, editar, eliminar)' AS Descripcion, 
           'participantesjuntas.manage' AS Codigo
    
    UNION SELECT 'Ver Participantes Juntas', 
           'Ver el listado de participantes en juntas', 
           'participantesjuntas.view'
    
    UNION SELECT 'Agregar Participantes a Juntas', 
           'Agregar nuevos participantes a juntas existentes', 
           'participantesjuntas.add'
    
    UNION SELECT 'Editar Participantes en Juntas', 
           'Modificar información de participantes en juntas', 
           'participantesjuntas.edit'
    
    UNION SELECT 'Eliminar Participantes de Juntas', 
           'Remover participantes de juntas', 
           'participantesjuntas.remove'
    
    UNION SELECT 'Asignar Orden de Participantes', 
           'Definir el orden de recepción de fondos para participantes', 
           'participantesjuntas.assign_order'
    
    UNION SELECT 'Gestionar Garantías de Participantes', 
           'Administrar las garantías asociadas a participantes', 
           'participantesjuntas.manage_guarantees'
    
    UNION SELECT 'Ver Historial de Participantes', 
           'Consultar el historial de participación en juntas', 
           'participantesjuntas.history'
    
    UNION SELECT 'Exportar Listado de Participantes', 
           'Exportar el listado de participantes a diferentes formatos', 
           'participantesjuntas.export'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos WHERE Codigo = nuevos_permisos.Codigo
);

-- 2. Asignamos estos permisos a los roles correspondientes:
-- Asignar permisos al rol Administrador (todos los permisos de participantes)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador' 
AND p.Codigo LIKE 'participantesjuntas.%'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos al rol Coordinador (gestión completa excepto exportar)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador' 
AND p.Codigo IN (
    'participantesjuntas.manage', 
    'participantesjuntas.view', 
    'participantesjuntas.add',
    'participantesjuntas.edit',
    'participantesjuntas.remove',
    'participantesjuntas.assign_order',
    'participantesjuntas.manage_guarantees',
    'participantesjuntas.history'
)
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos al rol Cobrador (solo ver y gestionar garantías)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador' 
AND p.Codigo IN (
    'participantesjuntas.view',
    'participantesjuntas.manage_guarantees'
)
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos al rol Participante (solo ver su propia participación)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Participante' 
AND p.Codigo IN (
    'participantesjuntas.view',
    'participantesjuntas.history'
)
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos al rol Auditor (solo ver)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor' 
AND p.Codigo IN (
    'participantesjuntas.view',
    'participantesjuntas.history'
)
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- 3. Actualizamos permisos existentes para mantener consistencia:
-- Actualizar permisos existentes relacionados con participantes
UPDATE Permisos 
SET Descripcion = 'Permite ver el listado de participantes en juntas (permiso básico)'
WHERE Codigo = 'participants.view';

-- Si existe el permiso antiguo 'participants.manage', actualizarlo
UPDATE Permisos 
SET NombrePermiso = 'Gestionar Participantes (Legado)',
    Descripcion = 'Permiso legado para gestionar participantes (usar participantesjuntas.manage)',
    Codigo = 'participants.manage_legacy'
WHERE Codigo = 'participants.manage';
----- PERMISOS PARA CUENTAS

--1 Insertar nuevos permisos para el módulo de cuentas bancarias
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
    -- Permiso para ver listado de cuentas propias
    SELECT 'Ver Mis Cuentas', 
           'Ver el listado de cuentas bancarias propias', 
           'cuentas.view_own' AS Codigo
    
    UNION SELECT 'Ver Todas las Cuentas', 
           'Ver el listado completo de cuentas bancarias de todos los usuarios', 
           'cuentas.view_all'
    
    UNION SELECT 'Agregar Cuenta', 
           'Agregar nuevas cuentas bancarias', 
           'cuentas.add'
    
    UNION SELECT 'Editar Cuenta', 
           'Modificar cuentas bancarias existentes', 
           'cuentas.edit'
    
    UNION SELECT 'Eliminar Cuenta', 
           'Eliminar cuentas bancarias', 
           'cuentas.delete'
    
    UNION SELECT 'Gestionar Cuentas', 
           'Administrar completamente las cuentas bancarias (incluye todas las operaciones)', 
           'cuentas.manage'
    
    UNION SELECT 'Exportar Cuentas', 
           'Exportar el listado de cuentas bancarias', 
           'cuentas.export'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos WHERE Codigo = nuevos_permisos.Codigo
);

----------------------------------------------------------------------------
-- 2 Asignar TODOS los permisos de cuentas al Administrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Administrador' 
AND p.Codigo LIKE 'cuentas.%'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar TODOS los permisos de cuentas al Coordinador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Coordinador' 
AND p.Codigo LIKE 'cuentas.%'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos básicos al Participante (solo ver y gestionar sus propias cuentas)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Participante' 
AND p.Codigo IN ('cuentas.view_own', 'cuentas.add', 'cuentas.edit', 'cuentas.delete')
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos de solo lectura al Cobrador
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Cobrador' 
AND p.Codigo IN ('cuentas.view_all')
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Asignar permisos de solo lectura al Auditor
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r, Permisos p
WHERE r.NombreRol = 'Auditor' 
AND p.Codigo IN ('cuentas.view_all')
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

----------------------------------------------------------------------
-- 3 Actualizar permisos existentes relacionados con cuentas si usan códigos diferentes
UPDATE Permisos 
SET NombrePermiso = 'Ver Cuentas Bancarias (Legado)',
    Descripcion = 'Permiso legado para ver cuentas (usar cuentas.view_own o cuentas.view_all)',
    Codigo = 'accounts.view_legacy'
WHERE Codigo = 'accounts.view';

UPDATE Permisos 
SET NombrePermiso = 'Gestionar Cuentas Bancarias (Legado)',
    Descripcion = 'Permiso legado para gestionar cuentas (usar cuentas.manage)',
    Codigo = 'accounts.manage_legacy'
WHERE Codigo = 'accounts.manage';

UPDATE Permisos 
SET NombrePermiso = 'Gestionar Todas las Cuentas (Legado)',
    Descripcion = 'Permiso legado para gestionar todas las cuentas (usar cuentas.manage)',
    Codigo = 'accounts.manage_all_legacy'
WHERE Codigo = 'accounts.manage_all';

----------------------------------------------------------------
-- cuantro: actualizar campos en las CuentasBancarias 
ALTER TABLE CuentasBancarias MODIFY EsPrincipal TINYINT(1) DEFAULT 0;
ALTER TABLE CuentasBancarias MODIFY Activa TINYINT(1) DEFAULT 1;

--- ACTUALIZAR PERMISOS PARA GARANTIAS
-- 1. Primero actualizar los permisos existentes si tienen códigos diferentes
UPDATE Permisos 
SET Codigo = 'garantias.manage',
    Descripcion = 'Administrar completamente las garantías (incluye todas las operaciones)'
WHERE NombrePermiso = 'Gestionar Garantías' AND Codigo != 'garantias.manage';

UPDATE Permisos 
SET Codigo = 'garantias.view',
    Descripcion = 'Ver información de garantías'
WHERE NombrePermiso = 'Ver Garantías' AND Codigo != 'garantias.view';

-- 2. Insertar solo los permisos que no existen (verificando por nombre y código)
INSERT INTO Permisos (NombrePermiso, Descripcion, Codigo)
SELECT * FROM (
    SELECT 'Ver Mis Garantías' AS NombrePermiso, 
           'Ver el listado de garantías propias' AS Descripcion, 
           'garantias.view_own' AS Codigo
    
    UNION SELECT 'Ver Todas las Garantías', 
           'Ver el listado completo de garantías de todos los usuarios', 
           'garantias.view_all'
    
    UNION SELECT 'Agregar Garantía', 
           'Agregar nuevas garantías', 
           'garantias.add'
    
    UNION SELECT 'Editar Garantía', 
           'Modificar garantías existentes', 
           'garantias.edit'
    
    UNION SELECT 'Eliminar Garantía', 
           'Eliminar garantías', 
           'garantias.delete'
    
    UNION SELECT 'Aprobar Garantías', 
           'Aprobar o rechazar garantías pendientes', 
           'garantias.approve'
    
    UNION SELECT 'Ver Detalle Garantía', 
           'Ver el detalle completo de una garantía', 
           'garantias.detail'
    
    UNION SELECT 'Exportar Garantías', 
           'Exportar el listado de garantías', 
           'garantias.export'
    
    UNION SELECT 'Gestionar Tipos de Garantía', 
           'Administrar los tipos de garantía disponibles en el sistema', 
           'garantias.manage_types'
) AS nuevos_permisos
WHERE NOT EXISTS (
    SELECT 1 FROM Permisos 
    WHERE Codigo = nuevos_permisos.Codigo 
    OR NombrePermiso = nuevos_permisos.NombrePermiso
);

-- 3. Asignar permisos corregidos a roles
-- Administrador (todos los permisos de garantías)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
JOIN Permisos p ON p.Codigo LIKE 'garantias.%'
WHERE r.NombreRol = 'Administrador'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Coordinador (gestión completa excepto tipos)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
JOIN Permisos p ON p.Codigo IN (
    'garantias.view_all',
    'garantias.add',
    'garantias.edit',
    'garantias.manage',
    'garantias.approve',
    'garantias.detail',
    'garantias.export'
)
WHERE r.NombreRol = 'Coordinador'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Cobrador (corregido error de sintaxis en códigos)
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
JOIN Permisos p ON p.Codigo IN (
    'garantias.view_all',
    'garantias.detail',
    'garantias.approve'
)
WHERE r.NombreRol = 'Cobrador'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Participante
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
JOIN Permisos p ON p.Codigo IN (
    'garantias.view_own',
    'garantias.add',
    'garantias.detail'
)
WHERE r.NombreRol = 'Participante'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- Auditor
INSERT INTO Roles_Permisos (RolID, PermisoID)
SELECT r.RolID, p.PermisoID 
FROM Roles r
JOIN Permisos p ON p.Codigo IN (
    'garantias.view_all',
    'garantias.detail'
)
WHERE r.NombreRol = 'Auditor'
AND NOT EXISTS (
    SELECT 1 FROM Roles_Permisos rp 
    WHERE rp.RolID = r.RolID AND rp.PermisoID = p.PermisoID
);

-- 4. Actualizar permisos legacy
UPDATE Permisos 
SET NombrePermiso = 'Gestionar Garantías (Legado)',
    Descripcion = 'Permiso legado para gestionar garantías (usar garantias.manage)',
    Codigo = 'guarantees.manage_legacy'
WHERE Codigo = 'guarantees.manage' AND Codigo != 'garantias.manage';

UPDATE Permisos 
SET NombrePermiso = 'Ver Garantías (Legado)',
    Descripcion = 'Permiso legado para ver garantías (usar garantias.view_own o garantias.view_all)',
    Codigo = 'guarantees.view_legacy'
WHERE Codigo = 'guarantees.view' AND Codigo != 'garantias.view';

-- 10 ACTU PERMISIS JUNTAS
UPDATE Permisos 
SET Descripcion = 'Permite asignar y modificar el orden de recepción de fondos para participantes en una junta'
WHERE Codigo = 'participantesjuntas.assign_order';

